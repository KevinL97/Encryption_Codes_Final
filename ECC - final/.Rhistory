setwd("C:/Users/User/Desktop/Cifradores/AES/AES_modificado")
aes_time <- read.delim2("tiempos.txt", header = FALSE, sep = ",")
colnames(aes_time) <- c("Encryption", "Decryption")
aes_eTime <- aes_time$Encryption
aes_dTime <- aes_time$Decryption
aes_eTime <- as.numeric(aes_eTime)
aes_dTime <- as.numeric(aes_dTime)
#RSA algorithm
setwd("C:/Users/User/Desktop/Cifradores/RSA")
rsa_time <- read.delim2("tiempos.txt", header = FALSE, sep = ",")
colnames(rsa_time) <- c("Encryption", "Decryption")
rsa_eTime <- rsa_time$Encryption
rsa_dTime <- rsa_time$Decryption
rsa_eTime <- as.numeric(rsa_eTime)
rsa_dTime <- as.numeric(rsa_dTime)
#ECC algorithm
setwd("C:/Users/User/Desktop/Cifradores/ECC - final")
ecc_time <- read.delim2("tiempos.txt", header = FALSE, sep = ",")
colnames(ecc_time) <- c("Encryption", "Decryption")
ecc_eTime <- ecc_time$Encryption
ecc_dTime <- ecc_time$Decryption
ecc_eTime <- as.numeric(ecc_eTime)
ecc_dTime <- as.numeric(ecc_dTime)
# Create data frame to graph
mixed_encTime <- data.frame(c1 = aes_eTime,
c2 = rsa_eTime,
c3 = ecc_eTime)
colnames(mixed_encTime) <- c("AES_encTime","RSA_encTime","ECC_encTime")
#install.packages("ggplot2")
library(ggplot2)
p <- ggplot(mixed_encTime, aes(x = factor(1:nrow(mixed_encTime)))) +
geom_point(aes(y = AES_encTime), size = 4, color = "green", shape=7) +
geom_point(aes(y = RSA_encTime), size = 4, color = "blue", shape=4) +
geom_point(aes(y = ECC_encTime), size = 4, color = "red", shape=1) +
geom_line(aes(y = AES_encTime, color = "AES_encTime", group = 1)) +
geom_line(aes(y = RSA_encTime, color = "RSA_encTime", group = 1)) +
geom_line(aes(y = ECC_encTime, color = "ECC_encTime", group = 1)) +
scale_y_continuous(breaks=c(0,300,600,900,1200,1500,1800,2100,2400,2700,3000,3300,3600)) +
labs(title = "Encryption Times (milliseconds)", x = "Repetitions", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.85, 0.8)
)
# Use custom color palettes
p+scale_color_manual(values=c("green", "red", "blue")) +
theme(panel.background = element_rect(fill = "white"))
#################################################
#setwd("C:/Users/Kevin/Desktop/datos/results-40vkm2")
#################################################
#setwd("C:/Users/Kevin/Desktop/datos/")
setwd("C:/Users/Kevin/Desktop/Data Test/data_40")
x0 <- read.csv(file = 'Flooding-0.csv')
#Set workspace
setwd("C:/Users/User/Documents/----MATERIAS U----/8vo y 9no semestre/Redes Moviles e inalambricas/PROYECTO RED INALAMBRICA/Analisis Data/My_data/20_csv")
#Read csv file
library(dplyr)
x20 <- read.csv(file = 'F-#0.csv')
sf20 <- x20 %>% filter(name == "maxSpeed")
tf20 <- x20 %>% filter(name == "currentTime:last")
tf20 <- tf20 %>% filter(!is.na(value))
vectorTime20 <- tf20$value
vectorSpeed20 <- sf20$value
vectorTime20
vectorSpeed20
mixed20 <- data.frame(x = vectorTime20, y = vectorSpeed20)
colnames(mixed20) <- c("Time", "Speed")
#Set workspace
setwd("C:/Users/User/Documents/----MATERIAS U----/8vo y 9no semestre/Redes Moviles e inalambricas/PROYECTO RED INALAMBRICA/Analisis Data/My_data/60_csv")
#Read csv file
x60 <- read.csv(file = 'F-#9.csv')
sf60 <- x60 %>% filter(name == "maxSpeed")
tf60 <- x60 %>% filter(name == "currentTime:last")
tf60 <- tf60 %>% filter(!is.na(value))
vectorTime60 <- tf60$value
vectorSpeed60 <- sf60$value
if (length(vectorTime60) < length(vectorSpeed60)) {
rep_times <- ceiling(length(vectorSpeed60) / length(vectorTime60))
vectorTime60 <- rep(vectorTime60, times = rep_times)[1:length(vectorSpeed60)]
} else if (length(vectorTime60) > length(vectorSpeed60)) {
rep_times <- ceiling(length(vectorTime60) / length(vectorSpeed60))
vectorSpeed60 <- rep(vectorSpeed60, times = rep_times)[1:length(vectorTime60)]
}
mixed60 <- data.frame(x = vectorTime60, y = vectorSpeed60-1)
colnames(mixed60) <- c("Time", "Speed")
#Set workspace
setwd("C:/Users/User/Documents/----MATERIAS U----/8vo y 9no semestre/Redes Moviles e inalambricas/PROYECTO RED INALAMBRICA/Analisis Data/My_data/100_csv")
#Read csv file
x100 <- read.csv(file = 'F-#0.csv')
sf100 <- x100 %>% filter(name == "maxSpeed")
tf100 <- x100 %>% filter(name == "currentTime:last")
tf100 <- tf100 %>% filter(!is.na(value))
vectorTime100 <- tf100$value
vectorSpeed100 <- sf100$value
if (length(vectorTime100) < length(vectorSpeed100)) {
rep_times <- ceiling(length(vectorSpeed100) / length(vectorTime100))
vectorTime100 <- rep(vectorTime100, times = rep_times)[1:length(vectorSpeed100)]
} else if (length(vectorTime100) > length(vectorSpeed100)) {
rep_times <- ceiling(length(vectorTime100) / length(vectorSpeed100))
vectorSpeed100 <- rep(vectorSpeed100, times = rep_times)[1:length(vectorTime100)]
}
mixed100 <- data.frame(x = vectorTime100, y = vectorSpeed100)
colnames(mixed100) <- c("Time", "Speed")
#PARA EL DE 20
pdf("Speed_20.pdf", width = 10, height = 6)  # Tamaño 8x6 pulgadas
library(ggplot2)
p<-ggplot(mixed20, aes(x = Time, y = Speed)) +
geom_point(shape = 23, fill="yellow") +
geom_line(size = 1, color = "red") +
guides(fill = guide_legend(title = "Título"))+
labs(title = "Speed vs Time", x = "Time [s]", y = "Speed [m/s]") +
theme(legend.title=element_blank(),
legend.position = c(0.15,0.10)
)             # Position legend in bottom right
p + theme(panel.background = element_rect(fill = "gray"),
panel.grid.major = element_line(colour = "black", linetype = "dotted"))
dev.off()  # Cerrar el archivo PDF
setwd("C:/Users/User/Desktop/Cifradores/AES/AES_modificado")
aes_time <- read.delim2("tiempos.txt", header = FALSE, sep = ",")
colnames(aes_time) <- c("Encryption", "Decryption")
aes_eTime <- aes_time$Encryption
aes_dTime <- aes_time$Decryption
aes_eTime <- as.numeric(aes_eTime)
aes_dTime <- as.numeric(aes_dTime)
#RSA algorithm
setwd("C:/Users/User/Desktop/Cifradores/RSA")
rsa_time <- read.delim2("tiempos.txt", header = FALSE, sep = ",")
colnames(rsa_time) <- c("Encryption", "Decryption")
rsa_eTime <- rsa_time$Encryption
rsa_dTime <- rsa_time$Decryption
rsa_eTime <- as.numeric(rsa_eTime)
rsa_dTime <- as.numeric(rsa_dTime)
#ECC algorithm
setwd("C:/Users/User/Desktop/Cifradores/ECC - final")
ecc_time <- read.delim2("tiempos.txt", header = FALSE, sep = ",")
colnames(ecc_time) <- c("Encryption", "Decryption")
ecc_eTime <- ecc_time$Encryption
ecc_dTime <- ecc_time$Decryption
ecc_eTime <- as.numeric(ecc_eTime)
ecc_dTime <- as.numeric(ecc_dTime)
# Create data frame to graph
mixed_encTime <- data.frame(c1 = aes_eTime,
c2 = rsa_eTime,
c3 = ecc_eTime)
colnames(mixed_encTime) <- c("AES_encTime","RSA_encTime","ECC_encTime")
#install.packages("ggplot2")
library(ggplot2)
p <- ggplot(mixed_encTime, aes(x = factor(1:nrow(mixed_encTime)))) +
geom_point(aes(y = AES_encTime), size = 4, color = "green", shape=7) +
geom_point(aes(y = RSA_encTime), size = 4, color = "blue", shape=4) +
geom_point(aes(y = ECC_encTime), size = 4, color = "red", shape=1) +
geom_line(aes(y = AES_encTime, color = "AES_encTime", group = 1)) +
geom_line(aes(y = RSA_encTime, color = "RSA_encTime", group = 1)) +
geom_line(aes(y = ECC_encTime, color = "ECC_encTime", group = 1)) +
scale_y_continuous(breaks=c(0,300,600,900,1200,1500,1800,2100,2400,2700,3000,3300,3600)) +
labs(title = "Encryption Times (milliseconds)", x = "Repetitions", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.85, 0.8)
)
# Use custom color palettes
p+scale_color_manual(values=c("green", "red", "blue")) +
theme(panel.background = element_rect(fill = "white"))
# Use brewer color palettes
p+scale_color_brewer(palette="Dark2")
# Use grey scale
p + scale_color_grey()
# Use custom color palettes
p+scale_color_manual(values=c("green", "red", "blue")) +
theme(panel.background = element_rect(fill = "white"))
# Use brewer color palettes
p+scale_color_brewer(palette="Dark2")
# Use grey scale
p + scale_color_grey()
# Use custom color palettes
p+scale_color_manual(values=c("green", "red", "blue")) +
theme(panel.background = element_rect(fill = "white"))
p <- ggplot(mixed_encTime, aes(x = factor(1:nrow(mixed_encTime)))) +
geom_point(aes(y = AES_encTime), size = 4, color = "brown", shape=7) +
geom_point(aes(y = RSA_encTime), size = 4, color = "blue", shape=4) +
geom_point(aes(y = ECC_encTime), size = 4, color = "red", shape=1) +
geom_line(aes(y = AES_encTime, color = "AES_encTime", group = 1)) +
geom_line(aes(y = RSA_encTime, color = "RSA_encTime", group = 1)) +
geom_line(aes(y = ECC_encTime, color = "ECC_encTime", group = 1)) +
scale_y_continuous(breaks=c(0,300,600,900,1200,1500,1800,2100,2400,2700,3000,3300,3600)) +
labs(title = "Encryption Times (milliseconds)", x = "Repetitions", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.85, 0.8)
)
# Use custom color palettes
p+scale_color_manual(values=c("green", "red", "blue")) +
theme(panel.background = element_rect(fill = "white"))
# Use custom color palettes
p+scale_color_manual(values=c("brown", "red", "blue")) +
theme(panel.background = element_rect(fill = "white"))
p <- ggplot(mixed_encTime, aes(x = factor(1:nrow(mixed_encTime)))) +
geom_point(aes(y = AES_encTime), size = 4, color = "black", shape=7) +
geom_point(aes(y = RSA_encTime), size = 4, color = "blue", shape=4) +
geom_point(aes(y = ECC_encTime), size = 4, color = "red", shape=1) +
geom_line(aes(y = AES_encTime, color = "AES_encTime", group = 1)) +
geom_line(aes(y = RSA_encTime, color = "RSA_encTime", group = 1)) +
geom_line(aes(y = ECC_encTime, color = "ECC_encTime", group = 1)) +
scale_y_continuous(breaks=c(0,300,600,900,1200,1500,1800,2100,2400,2700,3000,3300,3600)) +
labs(title = "Encryption Times (milliseconds)", x = "Repetitions", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.85, 0.8)
)
# Use custom color palettes
p+scale_color_manual(values=c("black", "red", "blue")) +
theme(panel.background = element_rect(fill = "white"))
# Use custom color palettes
p+scale_color_manual(values=c("black", "red", "blue")) +
theme(panel.background = element_rect(fill = "gray"))
# Use custom color palettes
p+scale_color_manual(values=c("black", "red", "blue")) +
theme(panel.background = element_rect(fill = "white"))
p <- ggplot(mixed_encTime, aes(x = factor(1:nrow(mixed_encTime)))) +
geom_point(aes(y = AES_encTime), size = 4, color = "black", shape=7) +
geom_point(aes(y = RSA_encTime), size = 4, color = "blue", shape=4) +
geom_point(aes(y = ECC_encTime), size = 4, color = "red", shape=1) +
geom_line(aes(y = AES_encTime, color = "AES_encTime", group = 1), size = 1) +
geom_line(aes(y = RSA_encTime, color = "RSA_encTime", group = 1)) +
geom_line(aes(y = ECC_encTime, color = "ECC_encTime", group = 1)) +
scale_y_continuous(breaks=c(0,300,600,900,1200,1500,1800,2100,2400,2700,3000,3300,3600)) +
labs(title = "Encryption Times (milliseconds)", x = "Repetitions", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.85, 0.8)
)
# Use custom color palettes
p+scale_color_manual(values=c("black", "red", "blue")) +
theme(panel.background = element_rect(fill = "white"))
