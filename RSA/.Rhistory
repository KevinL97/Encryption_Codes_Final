#AES
setwd("C:/Users/User/Desktop/Cifradores/AES/AES_modificado")
#ECB
aes_ecb_memory <- read.delim2("CPU_ECB.txt", header = FALSE, sep = ",")
#AES
setwd("C:/Users/User/Desktop/Cifradores/AES")
#ECB
aes_ecb_memory <- read.delim2("CPU_ECB.txt", header = FALSE, sep = ",")
colnames(aes_ecb_cpu) <- c("Operation", "InputSize", "Time", "ThrougByte", "Throughbits", "CPU")
#AES
setwd("C:/Users/User/Desktop/Cifradores/AES")
#ECB
aes_ecb_cpu <- read.delim2("CPU_ECB.txt", header = FALSE, sep = ",")
colnames(aes_ecb_cpu) <- c("Operation", "InputSize", "Time", "ThrougByte", "Throughbits", "CPU")
View(aes_ecb_cpu)
aes_ecb_cpu <- aes_ecb_cpu[aes_ecb_cpu$Operation == "encrypt", ]
ecb_cpu <- aes_ecb_cpu$CPU
ecb_cpu <- as.numeric(ecb_cpu)
#CBC
aes_cbc_cpu <- read.delim2("CPU_CBC.txt", header = FALSE, sep = ",")
colnames(aes_cbc_cpu) <- c("Operation", "InputSize", "Time", "ThrougByte", "Throughbits", "CPU")
aes_cbc_cpu <- aes_cbc_cpu[aes_cbc_cpu$Operation == "encrypt", ]
cbc_cpu <- aes_cbc_cpu$CPU
cbc_cpu <- as.numeric(cbc_cpu)
text_length <- c(446,1100,2142,2972,3686)
#Comparing ECB vs CBC modes
mixed_aesmodes_CPU <- data.frame(c1 = ecb_cpu,
c2 = cbc_cpu,
c3 = text_length)
colnames(mixed_aesmodes_CPU) <- c("ECB_CPU","CBC_CPU", "Text_length")
View(mixed_aesmodes_CPU)
p2 <- ggplot(mixed_aesmodes_CPU, aes(x = Text_length)) +
geom_point(aes(y = ECB_CPU), size = 4, color = "darkgoldenrod", shape=7) +
geom_point(aes(y = CBC_CPU), size = 4, color = "deeppink", shape=1) +
geom_line(aes(y = ECB_CPU, color = "ECB_CPU", group = 1), linewidth = 1) +
geom_line(aes(y = CBC_CPU, color = "CBC_CPU", group = 1), linewidth = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (Bytes)", y = "Memory (Bytes)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.9),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
library(ggplot2)
p2 <- ggplot(mixed_aesmodes_CPU, aes(x = Text_length)) +
geom_point(aes(y = ECB_CPU), size = 4, color = "darkgoldenrod", shape=7) +
geom_point(aes(y = CBC_CPU), size = 4, color = "deeppink", shape=1) +
geom_line(aes(y = ECB_CPU, color = "ECB_CPU", group = 1), linewidth = 1) +
geom_line(aes(y = CBC_CPU, color = "CBC_CPU", group = 1), linewidth = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (Bytes)", y = "Memory (Bytes)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.9),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
p2 + scale_color_manual(values=c("deeppink", "darkgoldenrod")) +
theme(panel.background = element_rect(fill = "white"))
p2 <- ggplot(mixed_aesmodes_CPU, aes(x = Text_length)) +
geom_point(aes(y = ECB_CPU), size = 4, color = "darkgoldenrod", shape=7) +
geom_point(aes(y = CBC_CPU), size = 4, color = "deeppink", shape=1) +
geom_line(aes(y = ECB_CPU, color = "ECB_CPU", group = 1), linewidth = 1) +
geom_line(aes(y = CBC_CPU, color = "CBC_CPU", group = 1), linewidth = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (Bytes)", y = "CPU Consumption (%)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.9),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
p2 + scale_color_manual(values=c("deeppink", "darkgoldenrod")) +
theme(panel.background = element_rect(fill = "white"))
p2 <- ggplot(mixed_aesmodes_CPU, aes(x = Text_length)) +
geom_point(aes(y = ECB_CPU), size = 4, color = "darkgoldenrod", shape=7) +
geom_point(aes(y = CBC_CPU), size = 4, color = "deeppink", shape=1) +
geom_line(aes(y = ECB_CPU, color = "ECB_CPU", group = 1), linewidth = 1) +
geom_line(aes(y = CBC_CPU, color = "CBC_CPU", group = 1), linewidth = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (Bytes)", y = "CPU Consumption (%)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.25, 0.9),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
p2 + scale_color_manual(values=c("deeppink", "darkgoldenrod")) +
theme(panel.background = element_rect(fill = "white"))
p2 <- ggplot(mixed_aesmodes_CPU, aes(x = Text_length)) +
geom_point(aes(y = ECB_CPU), size = 4, color = "darkgoldenrod", shape=7) +
geom_point(aes(y = CBC_CPU), size = 4, color = "deeppink", shape=1) +
geom_line(aes(y = ECB_CPU, color = "ECB_CPU", group = 1), linewidth = 1) +
geom_line(aes(y = CBC_CPU, color = "CBC_CPU", group = 1), linewidth = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (Bytes)", y = "CPU Consumption (%)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.8),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
p2 + scale_color_manual(values=c("deeppink", "darkgoldenrod")) +
theme(panel.background = element_rect(fill = "white"))
#1024 bits
setwd("C:/Users/User/Desktop/Cifradores/RSA")
rsa_1024_cpu <- read.delim2("CPU_1024.txt", header = FALSE, sep = ",")
colnames(rsa_1024_cpu) <- c("Operation", "InputSize", "Time", "ThrougByte", "Throughbits", "CPU")
View(rsa_1024_cpu)
RSA1024_cpu <- rsa_1024_cpu$CPU
RSA1024_cpu <- as.numeric(RSA1024_cpu)
#2048 bits
rsa_2048_cpu <- read.delim2("CPU_2048.txt", header = FALSE, sep = ",")
colnames(rsa_2048_cpu) <- c("Operation", "InputSize", "Time", "ThrougByte", "Throughbits", "CPU")
rsa_2048_cpu <- rsa_2048_cpu[rsa_2048_cpu$Operation == "encrypt", ]
RSA2048_cpu <- rsa_2048_cpu$CPU
RSA2048_cpu <- as.numeric(RSA2048_cpu)
#3072 bits
rsa_3072_cpu <- read.delim2("CPU_3072.txt", header = FALSE, sep = ",")
colnames(rsa_3072_cpu) <- c("Operation", "InputSize", "Time", "ThrougByte", "Throughbits", "CPU")
View(rsa_3072_cpu)
rsa_3072_cpu <- rsa_3072_cpu[rsa_3072_cpu$Operation == "encrypt", ]
rsa_3072_cpu <- rsa_3072_cpu[rsa_3072_cpu$Operation == "encrypt", ]
RSA3072_cpu <- rsa_3072_cpu$CPU
RSA3072_cpu <- as.numeric(RSA3072_cpu)
text_length_rsa <- c(99, 242, 354)
#Comparing ECB vs CBC modes
mixed_rsamodes_CPU <- data.frame(c1 = RSA1024_cpu,
c2 = RSA2048_cpu,
c3 = RSA3072_cpu)
colnames(mixed_rsamodes_CPU) <- c("RSA_1024_CPU","RSA_2048_CPU", "RSA_3072_CPU")
View(mixed_rsamodes_CPU)
q2 <- ggplot(mixed_rsamodes_CPU, aes(x = factor(1:nrow(mixed_rsamodes_CPU)))) +
geom_point(aes(y = RSA_1024_CPU), size = 4, color = "seagreen", shape=11) +
geom_point(aes(y = RSA_2048_CPU), size = 4, color = "orangered", shape=5) +
geom_point(aes(y = RSA_3072_CPU), size = 4, color = "mediumpurple", shape=0) +
geom_line(aes(y = RSA_1024_CPU, color = "RSA_1024_CPU", group = 1), size = 1) +
geom_line(aes(y = RSA_2048_CPU, color = "RSA_2048_CPU", group = 1), size = 1) +
geom_line(aes(y = RSA_3072_CPU, color = "RSA_3072_CPU", group = 1), size = 1) +
#scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Executions", y = "CPU Consumption (%)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.85, 0.6),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
q2 + scale_color_manual(values=c("seagreen", "orangered", "mediumpurple")) +
theme(panel.background = element_rect(fill = "white"))
q2 <- ggplot(mixed_rsamodes_CPU, aes(x = factor(1:nrow(mixed_rsamodes_CPU)))) +
geom_point(aes(y = RSA_1024_CPU), size = 4, color = "seagreen", shape=11) +
geom_point(aes(y = RSA_2048_CPU), size = 4, color = "orangered", shape=5) +
geom_point(aes(y = RSA_3072_CPU), size = 4, color = "mediumpurple", shape=0) +
geom_line(aes(y = RSA_1024_CPU, color = "RSA_1024_CPU", group = 1), size = 1) +
geom_line(aes(y = RSA_2048_CPU, color = "RSA_2048_CPU", group = 1), size = 1) +
geom_line(aes(y = RSA_3072_CPU, color = "RSA_3072_CPU", group = 1), size = 1) +
#scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Executions", y = "CPU Consumption (%)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.85, 0.5),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
q2 + scale_color_manual(values=c("seagreen", "orangered", "mediumpurple")) +
theme(panel.background = element_rect(fill = "white"))
q2 <- ggplot(mixed_rsamodes_CPU, aes(x = factor(1:nrow(mixed_rsamodes_CPU)))) +
geom_point(aes(y = RSA_1024_CPU), size = 4, color = "seagreen", shape=11) +
geom_point(aes(y = RSA_2048_CPU), size = 4, color = "orangered", shape=5) +
geom_point(aes(y = RSA_3072_CPU), size = 4, color = "mediumpurple", shape=0) +
geom_line(aes(y = RSA_1024_CPU, color = "RSA_1024_CPU", group = 1), size = 1) +
geom_line(aes(y = RSA_2048_CPU, color = "RSA_2048_CPU", group = 1), size = 1) +
geom_line(aes(y = RSA_3072_CPU, color = "RSA_3072_CPU", group = 1), size = 1) +
#scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Executions", y = "CPU Consumption (%)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.85, 0.4),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
q2 + scale_color_manual(values=c("seagreen", "orangered", "mediumpurple")) +
theme(panel.background = element_rect(fill = "white"))
#ECC
setwd("C:/Users/User/Desktop/Cifradores/ECC - final")
#ECC
setwd("C:/Users/User/Desktop/Cifradores/ECC - final")
#E-1174
ecc_E1174_cpu <- read.delim2("CPU_E-1174.txt", header = FALSE, sep = ",")
colnames(ecc_E1174_cpu) <- c("Operation", "InputSize", "ThrougByte", "Throughbits", "CPU")
View(ecc_E1174_cpu)
ecc_E1174_cpu <- ecc_E1174_cpu[ecc_E1174_cpu$Operation == "encrypt", ]
View(ecc_E1174_cpu)
E1174_cpu <- ecc_E1174_cpu$CPU
E1174_cpu <- as.numeric(E1174_cpu)
#M-221
ecc_M221_cpu <- read.delim2("CPU_M-221.txt", header = FALSE, sep = ",")
colnames(ecc_M221_cpu) <- c("Operation", "InputSize", "ThrougByte", "Throughbits", "CPU")
ecc_M221_cpu <- ecc_M221_cpu[ecc_M221_cpu$Operation == "encrypt", ]
M221_cpu <- ecc_M221_cpu$CPU
M221_cpu <- as.numeric(M221_cpu)
#P-256
ecc_P256_cpu <- read.delim2("CPU_P-256.txt", header = FALSE, sep = ",")
colnames(ecc_P256_cpu) <- c("Operation", "InputSize", "ThrougByte", "Throughbits", "CPU")
ecc_P256_cpu <- ecc_P256_cpu[ecc_P256_cpu$Operation == "encrypt", ]
P256_cpu <- ecc_P256_cpu$CPU
P256_cpu <- as.numeric(P256_cpu)
ECC_text_length <- c(446,1100,2142,2972,3686)
#Comparing encryption time
mixed_ECC_cpu <- data.frame(c1 = E1174_cpu,
c2 = M221cpu,
c3 = P256_cpu,
c4 = ECC_text_length)
#Comparing encryption time
mixed_ECC_cpu <- data.frame(c1 = E1174_cpu,
c2 = M221_cpu,
c3 = P256_cpu,
c4 = ECC_text_length)
s2 <- ggplot(mixed_ECC_cpu, aes(x = ECC_Text_length)) +
geom_point(aes(y = E1174_CPU), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_CPU), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = M221_CPU), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = E1174_CPU, color = "E1174_CPU", group = 1), size = 1) +
geom_line(aes(y = P256_CPU, color = "P256_CPU", group = 1), size = 1) +
geom_line(aes(y = M221_CPU, color = "M221_CPU", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (bytes)", y = "CPU Consumption (%)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
s2 + scale_color_manual(values=c("green","lightsalmon", "royalblue")) +
theme(panel.background = element_rect(fill = "white"))
#Comparing encryption time
mixed_ECC_cpu <- data.frame(c1 = E1174_cpu,
c2 = M221_cpu,
c3 = P256_cpu,
c4 = ECC_text_length)
colnames(mixed_ECC_cpu) <- c("E1174_CPU","M221_CPU", "P256_CPU", "ECC_Text_length")
library(ggplot2)
s2 <- ggplot(mixed_ECC_cpu, aes(x = ECC_Text_length)) +
geom_point(aes(y = E1174_CPU), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_CPU), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = M221_CPU), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = E1174_CPU, color = "E1174_CPU", group = 1), size = 1) +
geom_line(aes(y = P256_CPU, color = "P256_CPU", group = 1), size = 1) +
geom_line(aes(y = M221_CPU, color = "M221_CPU", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (bytes)", y = "CPU Consumption (%)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
s2 + scale_color_manual(values=c("green","lightsalmon", "royalblue")) +
theme(panel.background = element_rect(fill = "white"))
text_length <- c(446,1100,2142,2972,3686)
cpu_comparison <- data.frame(c1 = ecb_cpu,
c2 = M221_cpu,
c3 = text_length)
colnames(cpu_comparison) <- c("ECB_CPU", "M221_CPU", "Text_Size")
cpu_comparison <- data.frame(c1 = ecb_cpu,
c2 = M221_cpu,
c3 = text_length)
colnames(cpu_comparison) <- c("ECB_CPU", "P256_CPU", "Text_Size")
c4 <- ggplot(cpu_comparison, aes(x = Text_Size)) +
geom_point(aes(y = ecb_cpu), size = 4, color = "lightpink", shape=19, fill = "lightpink") +
geom_point(aes(y = M221_cpu), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
#geom_point(aes(y = rsa1024_Time), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = ecb_cpu, color = "ecb_cpu", group = 1), size = 1) +
geom_line(aes(y = M221_cpu, color = "M221_cpu", group = 1), size = 1) +
#geom_line(aes(y = rsa1024_Time, color = "rsa1024_Time", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
#scale_y_continuous(breaks=c(0,20, 40, 60, 80, 100,2000,5000,7500,8000)) +
labs(x = "Text size (bytes)", y = "CPU Consumption (%)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c4 + scale_color_manual(values=c("lightpink", "royalblue")) +
theme(panel.background = element_rect(fill = "white"))
View(p2)
#1024 bits
setwd("C:/Users/User/Desktop/Cifradores/RSA")
rsa_1024_cpu <- read.delim2("CPU_1024.txt", header = FALSE, sep = ",")
colnames(rsa_1024_cpu) <- c("Operation", "InputSize", "Time", "ThrougByte", "Throughbits", "CPU")
rsa_1024_cpu <- rsa_1024_cpu[rsa_1024_cpu$Operation == "encrypt", ]
RSA1024_cpu <- rsa_1024_cpu$CPU
RSA1024_cpu <- as.numeric(RSA1024_cpu)
#2048 bits
rsa_2048_cpu <- read.delim2("CPU_2048.txt", header = FALSE, sep = ",")
colnames(rsa_2048_cpu) <- c("Operation", "InputSize", "Time", "ThrougByte", "Throughbits", "CPU")
rsa_2048_cpu <- rsa_2048_cpu[rsa_2048_cpu$Operation == "encrypt", ]
RSA2048_cpu <- rsa_2048_cpu$CPU
RSA2048_cpu <- as.numeric(RSA2048_cpu)
#3072 bits
rsa_3072_cpu <- read.delim2("CPU_3072.txt", header = FALSE, sep = ",")
colnames(rsa_3072_cpu) <- c("Operation", "InputSize", "Time", "ThrougByte", "Throughbits", "CPU")
rsa_3072_cpu <- rsa_3072_cpu[rsa_3072_cpu$Operation == "encrypt", ]
RSA3072_cpu <- rsa_3072_cpu$CPU
RSA3072_cpu <- as.numeric(RSA3072_cpu)
text_length_rsa <- c(99, 242, 354)
#Comparing ECB vs CBC modes
mixed_rsamodes_CPU <- data.frame(c1 = RSA1024_cpu,
c2 = RSA2048_cpu,
c3 = RSA3072_cpu)
colnames(mixed_rsamodes_CPU) <- c("RSA_1024_CPU","RSA_2048_CPU", "RSA_3072_CPU")
library(ggplot2)
q2 <- ggplot(mixed_rsamodes_CPU, aes(x = factor(1:nrow(mixed_rsamodes_CPU)))) +
geom_point(aes(y = RSA_1024_CPU), size = 4, color = "seagreen", shape=11) +
geom_point(aes(y = RSA_2048_CPU), size = 4, color = "orangered", shape=5) +
geom_point(aes(y = RSA_3072_CPU), size = 4, color = "mediumpurple", shape=0) +
geom_line(aes(y = RSA_1024_CPU, color = "RSA_1024_CPU", group = 1), size = 1) +
geom_line(aes(y = RSA_2048_CPU, color = "RSA_2048_CPU", group = 1), size = 1) +
geom_line(aes(y = RSA_3072_CPU, color = "RSA_3072_CPU", group = 1), size = 1) +
#scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Executions", y = "CPU Consumption (%)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.85, 0.4),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
q2 + scale_color_manual(values=c("seagreen", "orangered", "mediumpurple")) +
theme(panel.background = element_rect(fill = "white"))
