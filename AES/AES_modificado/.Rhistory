setwd("C:/Users/User/Desktop/Cifradores/AES/AES_modificado")
#ECB mode
aes_ecb_time <- read.delim2("tiempos_ECB.txt", header = FALSE, sep = ",")
colnames(aes_ecb_time) <- c("Encryption", "Decryption")
ecb_eTime <- aes_ecb_time$Encryption
ecb_dTime <- aes_ecb_time$Decryption
ecb_eTime <- as.numeric(ecb_eTime)
ecb_dTime <- as.numeric(ecb_dTime)
#1024 bits
setwd("C:/Users/User/Desktop/Cifradores/RSA")
rsa_1024_time <- read.delim2("time_1024.txt", header = FALSE, sep = ",")
colnames(rsa_1024_time) <- c("Encryption", "Decryption")
rsa_1024_eTime <- rsa_1024_time$Encryption
rsa_1024_dTime <- rsa_1024_time$Decryption
rsa_1024_eTime <- as.numeric(rsa_1024_eTime)
rsa_1024_dTime <- as.numeric(rsa_1024_dTime)
#2048 bits
rsa_2048_time <- read.delim2("time_2048.txt", header = FALSE, sep = ",")
colnames(rsa_2048_time) <- c("Encryption", "Decryption")
rsa_2048_eTime <- rsa_2048_time$Encryption
rsa_2048_dTime <- rsa_2048_time$Decryption
rsa_2048_eTime <- as.numeric(rsa_2048_eTime)
rsa_2048_dTime <- as.numeric(rsa_2048_dTime)
#3072
rsa_3072_time <- read.delim2("time_3072.txt", header = FALSE, sep = ",")
colnames(rsa_3072_time) <- c("Encryption", "Decryption")
rsa_3072_eTime <- rsa_3072_time$Encryption
rsa_3072_dTime <- rsa_3072_time$Decryption
rsa_3072_eTime <- as.numeric(rsa_3072_eTime)
rsa_3072_dTime <- as.numeric(rsa_3072_dTime)
text_length_rsa <- c(99, 242, 354)
#ECC algorithm
setwd("C:/Users/User/Desktop/Cifradores/ECC - final")
#E-1174
ecc_E1174_time <- read.delim2("time_E-1174.txt", header = FALSE, sep = ",")
colnames(ecc_E1174_time) <- c("Encryption", "Decryption")
E1174_eTime <- ecc_E1174_time$Encryption
E1174_dTime <- ecc_E1174_time$Decryption
E1174_eTime <- as.numeric(E1174_eTime)
E1174_dTime <- as.numeric(E1174_dTime)
#P-256
ecc_P256_time <- read.delim2("time_P-256.txt", header = FALSE, sep = ",")
colnames(ecc_P256_time) <- c("Encryption", "Decryption")
P256_eTime <- ecc_P256_time$Encryption
P256_dTime <- ecc_P256_time$Decryption
P256_eTime <- as.numeric(P256_eTime)
P256_dTime <- as.numeric(P256_dTime)
#M-221
ecc_M221_time <- read.delim2("time_M-221.txt", header = FALSE, sep = ",")
colnames(ecc_M221_time) <- c("Encryption", "Decryption")
M221_eTime <- ecc_M221_time$Encryption
M221_dTime <- ecc_M221_time$Decryption
M221_eTime <- as.numeric(M221_eTime)
M221_dTime <- as.numeric(M221_dTime)
ECC_text_length <- c(446,1100,2142,2972,3686)
#//////////////////////////////////////////////////////////////////////////////////
# Time comparison
text_length <- c(446,1100,2142,2972,3686)
time_comparison <- data.frame(c1 = cbc_eTime,
c2 = P256_eTime,
c3 = text_length)
setwd("C:/Users/User/Desktop/Cifradores/AES/AES_modificado")
#ECB mode
aes_ecb_time <- read.delim2("tiempos_ECB.txt", header = FALSE, sep = ",")
colnames(aes_ecb_time) <- c("Encryption", "Decryption")
ecb_eTime <- aes_ecb_time$Encryption
ecb_dTime <- aes_ecb_time$Decryption
ecb_eTime <- as.numeric(ecb_eTime)
ecb_dTime <- as.numeric(ecb_dTime)
#CBC mode
aes_cbc_time <- read.delim2("tiempos_CBC.txt", header = FALSE, sep = ",")
colnames(aes_cbc_time) <- c("Encryption", "Decryption")
cbc_eTime <- aes_cbc_time$Encryption
cbc_dTime <- aes_cbc_time$Decryption
cbc_eTime <- as.numeric(cbc_eTime)
cbc_dTime <- as.numeric(cbc_dTime)
text_length <- c(446,1100,2142,2972,3686)
#//////////////////////////////////////////////////////////////////////////////////
# Time comparison
text_length <- c(446,1100,2142,2972,3686)
time_comparison <- data.frame(c1 = cbc_eTime,
c2 = P256_eTime,
c3 = text_length)
colnames(time_comparison) <- c("CBC_Time", "P256_Time", "Text_Size")
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = text_length), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = text_length, color = "text_length", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c2 + scale_color_manual(values=c("green","lightsalmon", "royalblue")) +
theme(panel.background = element_rect(fill = "white"))
library(ggplot2)
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = text_length), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = text_length, color = "text_length", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c2 + scale_color_manual(values=c("green","lightsalmon", "royalblue")) +
theme(panel.background = element_rect(fill = "white"))
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = text_length), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = text_length, color = "text_length", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c1 + scale_color_manual(values=c("green","lightsalmon", "royalblue")) +
theme(panel.background = element_rect(fill = "white"))
# Use custom color palettes
c1 + scale_color_manual(values=c("green", "royalblue", "lightsalmon" )) +
theme(panel.background = element_rect(fill = "white"))
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
#geom_point(aes(y = text_length), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
#geom_line(aes(y = text_length, color = "text_length", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c1 + scale_color_manual(values=c("green", "royalblue" )) +
theme(panel.background = element_rect(fill = "white"))
time_comparison <- data.frame(c1 = cbc_eTime,
c2 = P256_eTime,
c3 = rsa_1024_eTime,
c4 = text_length)
colnames(time_comparison) <- c("CBC_Time", "P256_Time", "rsa1024_Time", "Text_Size")
#//////////////////////////////////////////////////////////////////////////////////
# Time comparison
text_length <- c(446,1100,2142,2972,3686)
time_comparison <- data.frame(c1 = cbc_eTime,
c2 = P256_eTime,
c3 = rsa_1024_eTime,
c4 = text_length)
colnames(time_comparison) <- c("CBC_Time", "P256_Time", "rsa1024_Time", "Text_Size")
library(ggplot2)
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = rsa1024_Time), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = rsa1024_Time, color = "rsa1024_Time", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c1 + scale_color_manual(values=c("green", "royalblue", "lightsalmon")) +
theme(panel.background = element_rect(fill = "white"))
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = rsa1024_Time), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = rsa1024_Time, color = "rsa1024_Time", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
scale_y_continuous(breaks=c(0,20, 40, 60, 80, 100, 1000,2000,5000,7500,8000)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c1 + scale_color_manual(values=c("green", "royalblue", "lightsalmon")) +
theme(panel.background = element_rect(fill = "white"))
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = rsa1024_Time), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = rsa1024_Time, color = "rsa1024_Time", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
scale_y_continuous(breaks=c(0,20, 40, 60, 80, 100,2000,5000,7500,8000)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c1 + scale_color_manual(values=c("green", "royalblue", "lightsalmon")) +
theme(panel.background = element_rect(fill = "white"))
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = rsa1024_Time), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = rsa1024_Time, color = "rsa1024_Time", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
scale_y_continuous(breaks=c(0,20, 40, 60, 80, 100,8000)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c1 + scale_color_manual(values=c("green", "royalblue", "lightsalmon")) +
theme(panel.background = element_rect(fill = "white"))
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
#geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = rsa1024_Time), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
#geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = rsa1024_Time, color = "rsa1024_Time", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
#scale_y_continuous(breaks=c(0,20, 40, 60, 80, 100,2000,5000,7500,8000)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c1 + scale_color_manual(values=c("green", "royalblue", "lightsalmon")) +
theme(panel.background = element_rect(fill = "white"))
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
#geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = rsa1024_Time), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
#geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = rsa1024_Time, color = "rsa1024_Time", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
scale_y_continuous(breaks=c(0,20, 40, 60, 80, 100,2000,5000,7500,8000)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c1 + scale_color_manual(values=c("green", "royalblue", "lightsalmon")) +
theme(panel.background = element_rect(fill = "white"))
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
#geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = rsa1024_Time), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
#geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = rsa1024_Time, color = "rsa1024_Time", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
#scale_y_continuous(breaks=c(0,20, 40, 60, 80, 100,2000,5000,7500,8000)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c1 + scale_color_manual(values=c("green", "royalblue", "lightsalmon")) +
theme(panel.background = element_rect(fill = "white"))
c1 <- ggplot(time_comparison, aes(x = Text_Size)) +
geom_point(aes(y = cbc_eTime), size = 4, color = "green", shape=21, fill = "green") +
geom_point(aes(y = P256_eTime), size = 4, color = "royalblue", shape=22, fill = "royalblue") +
geom_point(aes(y = rsa1024_Time), size = 4, color = "lightsalmon", shape=23, fill = "lightsalmon") +
geom_line(aes(y = cbc_eTime, color = "cbc_eTime", group = 1), size = 1) +
geom_line(aes(y = P256_eTime, color = "P256_eTime", group = 1), size = 1) +
geom_line(aes(y = rsa1024_Time, color = "rsa1024_Time", group = 1), size = 1) +
scale_x_continuous(breaks=c(0,446,1100,2142,2972,3686)) +
#scale_y_continuous(breaks=c(0,20, 40, 60, 80, 100,2000,5000,7500,8000)) +
labs(x = "Text size (bytes)", y = "Time (ms)", color = "Algorithm") +
theme(
legend.title = element_blank(),
legend.position = c(0.15, 0.85),
#panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", linetype = "dashed"),
#panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.background = element_rect(fill = "white"),
legend.box.background = element_rect(color = "black", linewidth = 0.5),
legend.box.margin = margin(1, 1, 1, 1)
)
# Use custom color palettes
c1 + scale_color_manual(values=c("green", "royalblue", "lightsalmon")) +
theme(panel.background = element_rect(fill = "white"))
